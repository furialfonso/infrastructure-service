#configurar el entripoint o crear la base de datos manual de keycloak
services:
  postgres:
    container_name: ${POSTGRESQL_HOST}_${SCOPE}
    image: postgres:latest
    privileged: true
    restart: unless-stopped
    environment:
      POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - ${POSTGRESQL_EXTERNAL_PORT}:${POSTGRESQL_INTERNAL_PORT}
    volumes:
      - sso_db_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRESQL_USERNAME} -d ${POSTGRESQL_PASSWORD}'"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - cownetwork
  keycloak:
    depends_on:
      postgres:
        condition: service_healthy
    container_name: ${KEYCLOAK_HOST}_${SCOPE}
    image: bitnami/keycloak
    ports:
      - ${KEYCLOAK_EXTERNAL_PORT}:${KEYCLOAK_INTERNAL_PORT}
    environment:
      KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      KEYCLOAK_DATABASE_HOST: ${POSTGRESQL_HOST}_${SCOPE}
      KEYCLOAK_DATABASE_PORT: ${POSTGRESQL_EXTERNAL_PORT}
      KEYCLOAK_DATABASE_NAME: ${POSTGRESQL_DATABASE}
      KEYCLOAK_DATABASE_USER: ${POSTGRESQL_USERNAME}
      KEYCLOAK_DATABASE_PASSWORD: ${POSTGRESQL_PASSWORD}
      KEYCLOAK_ENABLE_STATISTICS: true
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: true
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${KEYCLOAK_HOST}_${SCOPE}:${KEYCLOAK_INTERNAL_PORT}/health/ready"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - cownetwork

volumes:
  sso_db_data:
    external: true

networks:
  cownetwork:
    external: true
